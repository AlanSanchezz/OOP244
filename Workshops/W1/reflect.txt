During this workshop, I gained a solid understanding of how to manage and manipulate arrays of structures and pointers in C++. I learned how to build modular programs that use function overloading, file input/output, and how to structure a basic data-handling module using both source and header files. One of the key takeaways was how to use pointers to create flexible views of data, allowing sorting and filtering without modifying the original dataset.

I initially struggled with the concept of passing and dereferencing pointers to functions, especially when combining that with const correctness and default parameters. It took me a bit of trial and error to understand where and when to apply certain declarations, but testing helped solidify the logic. Linker errors due to mismatched namespaces also forced me to be more mindful of scope.

As feedback, Iâ€™d suggest providing more visual examples or a diagram showing the pointer relationships, especially in setPointers and sort. That would help visual learners better grasp the manipulation of data through indirect references. Overall, this workshop was challenging but very rewarding and gave me a clearer view of how larger systems are modularly built in C++.
